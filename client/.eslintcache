[{"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\index.js":"1","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\App.js":"2","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\pages\\SavedBooks.js":"3","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\components\\Navbar.js":"4","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\pages\\SearchBooks.js":"5","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\components\\SignupForm.js":"6","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\components\\LoginForm.js":"7","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\localStorage.js":"8","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\API.js":"9","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\auth.js":"10","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\serviceWorker.js":"11","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\mutations.js":"12","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\queries.js":"13"},{"size":566,"mtime":1609343570264,"results":"14","hashOfConfig":"15"},{"size":1422,"mtime":1609345177437,"results":"16","hashOfConfig":"15"},{"size":2771,"mtime":1609882078523,"results":"17","hashOfConfig":"15"},{"size":2524,"mtime":1608564235433,"results":"18","hashOfConfig":"15"},{"size":5674,"mtime":1609872067223,"results":"19","hashOfConfig":"15"},{"size":4503,"mtime":1609376667333,"results":"20","hashOfConfig":"15"},{"size":3798,"mtime":1609383711840,"results":"21","hashOfConfig":"15"},{"size":793,"mtime":1608564235548,"results":"22","hashOfConfig":"15"},{"size":1406,"mtime":1609548032355,"results":"23","hashOfConfig":"15"},{"size":1235,"mtime":1609862912051,"results":"24","hashOfConfig":"15"},{"size":5227,"mtime":1609260626344,"results":"25","hashOfConfig":"15"},{"size":1302,"mtime":1609872249609,"results":"26","hashOfConfig":"15"},{"size":860,"mtime":1609863890339,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"yxd847",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\index.js",[],["56","57"],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\App.js",[],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\pages\\SavedBooks.js",["58","59","60","61","62"],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\components\\Navbar.js",[],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\pages\\SearchBooks.js",["63"],"import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\n\n// These imports take the submitted data and send it to the server.\nimport { useMutation } from '@apollo/react-hooks';\nimport { SAVE_BOOK } from '../utils/mutations';\n\n// This import takes care of token validation/storage\nimport Auth from '../utils/auth';\n\nimport { searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\n\n// Update state based on form input changes\n// const handleChange = (event) => {\n//   const { name, value } = event.target;\n\n//   setFormState({\n//     ...formState,\n//     [name]: value,\n//   });\n// };\n\nconst SearchBooks = () => {\n\n\n  const [saveBook, { errorSave }] = useMutation(SAVE_BOOK);  // returns the 'saveBook' function\n  //const [searchGoogleBooks, { errorSearch }] = useMutation(SEARCH_GOOGLE_BOOKS);  // returns the 'searchGoogleBooks' function\n\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      console.log( \"Search string is: \", searchInput );\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n      console.log( items );\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        link: book.volumeInfo.infoLink,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const savedBook = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      console.log( \"We do not have an authorization token!\");\n      return false;\n    }\n\n    try {\n      console.log( \"Invoking saveBook with: \", savedBook );\n      const response = await saveBook(savedBook, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, savedBook.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <p className='small'>Link: <a href={book.link} target=\"_blank\" rel=\"noreferrer\">{book.link}</a></p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\components\\SignupForm.js",[],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\components\\LoginForm.js",[],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\localStorage.js",[],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\API.js",[],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\auth.js",[],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\serviceWorker.js",[],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\mutations.js",[],"C:\\UT_BootCamp\\Projects\\book-search\\book-search\\client\\src\\utils\\queries.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":9,"column":10,"nodeType":"70","messageId":"71","endLine":9,"endColumn":19},{"ruleId":"68","severity":1,"message":"72","line":13,"column":12,"nodeType":"70","messageId":"71","endLine":13,"endColumn":21},{"ruleId":"68","severity":1,"message":"73","line":15,"column":26,"nodeType":"70","messageId":"71","endLine":15,"endColumn":31},{"ruleId":"68","severity":1,"message":"74","line":23,"column":11,"nodeType":"70","messageId":"71","endLine":23,"endColumn":15},{"ruleId":"68","severity":1,"message":"75","line":78,"column":75,"nodeType":"70","messageId":"71","endLine":78,"endColumn":91},{"ruleId":"68","severity":1,"message":"76","line":29,"column":22,"nodeType":"70","messageId":"71","endLine":29,"endColumn":31},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'SAVE_BOOK' is defined but never used.","Identifier","unusedVar","'userStuff' is assigned a value but never used.","'error' is assigned a value but never used.","'user' is assigned a value but never used.","'handleDeleteBook' is assigned a value but never used.","'errorSave' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]